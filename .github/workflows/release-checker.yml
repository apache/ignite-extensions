#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Release Checker"

on:
  workflow_dispatch:
    inputs:
      extension-name:
        description: 'The name of Ignite Extension (e.g. ignite-aws-ext)'
        required: true
      release-version:
        description: 'THe Extension release version (e.g. 1.0.0)'
        required: true

env:
  SERVER_URL: 'https://dist.apache.org/repos/dist/dev/ignite/ignite-extensions/'

jobs:
  check:
#    if: github.repository == 'apache/ignite-extensions'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Inputs
        id: vars
        shell: bash
        # see https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
        run: |
          name=${{ github.event.inputs.extension-name }}
          ver=${{ github.event.inputs.release-version }}
          mod_ver=$(echo ${ver} | sed -e 's/^[[:space:]]*//')
          mod_name=$(echo ${name} | sed -e 's/^[[:space:]]*//')
          mod_dir=modules/${name#"ignite-"}
          echo "Extension Version:     $mod_ver"
          echo "Extension Module Name: $mod_name"
          echo "Extension Directory:   $mod_dir"
          echo "EXTENSION_VERSION=${mod_ver}" >> $GITHUB_ENV
          echo "EXTENSION_NAME=${mod_name}" >> $GITHUB_ENV
          echo "EXTENSION_DIR=${mod_dir}" >> $GITHUB_ENV
      - name: Checkout Release Branch
        uses: actions/checkout@v3
        with:
          ref: '${{ github.event.inputs.extension-name }}-${{ github.event.inputs.release-version }}'
      - name: Checkout Release tags
        run: |
          git fetch --prune --unshallow --tags
          echo $(git tag -l)
      # This is a workaround for the Maven installation on the act image (official GitHub runners have maven preinstalled)
      - name: Download Maven
        run: |
          curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip -o maven.zip
          apt-get update
          apt-get -y install unzip
          unzip -d /usr/share maven.zip
          rm maven.zip
          ln -s /usr/share/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
          echo "M2_HOME=/usr/share/apache-maven-3.6.3" | tee -a /etc/environment
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Extract Branch POM Version and Compare
        shell: bash
        run: |
          mvn -pl ${{ env.EXTENSION_DIR }} help:evaluate -Dexpression=project.artifactId
          ver=$(mvn -pl ${{ env.EXTENSION_DIR }} help:evaluate -Dexpression=project.version -q -DforceStdout)
          pom_ver=$(echo ${ver} | sed -e 's/^[[:space:]]*//')
          missmatch='true'
          [ "$pom_ver" == "${{ env.EXTENSION_VERSION }}" ] && echo "missmatch='false'"
          echo "Extension pom version: ${pom_ver}"
          echo "VERSIONS_MISMATCH=${missmatch}" >> $GITHUB_ENV
          echo "VERSION_POM=${pom_ver}" >> $GITHUB_ENV
      - name: Compare Release Versions With Branch Version
        if: ${{ env.VERSIONS_MISMATCH == 'true' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Versions missmatch [branch=${{ env.EXTENSION_VERSION }}, pom=${{ env.VERSION_POM }}]')
      - name: Extracting RC tag
        run: |
          rc_tag=$(git describe --tags --exact-match --abbrev=0)
          echo "Extension RC tag: ${rc_tag}"
          echo "EXTENSION_RC_TAG=${rc_tag}" >> $GITHUB_ENV
#      - name: Download Binary and Sources
#        run: |
#          curl -sL https://www-eu.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip -o maven.zip
#          apt-get update
#          apt-get -y install unzip
#          unzip -d /usr/share maven.zip
#          rm maven.zip
#          ln -s /usr/share/apache-maven-3.6.3/bin/mvn /usr/bin/mvn
#          echo "M2_HOME=/usr/share/apache-maven-3.6.3" | tee -a /etc/environment
#      - name: Download Binary and Sources
#        run: "/bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.14/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
#      - name: Build and Test
#        run: mvn package -Pcheckstyle -DskipTests -B -V
