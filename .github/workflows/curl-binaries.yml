#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: "Release Curl"

on:
  workflow_dispatch:
    inputs:
      extension-name:
        description: 'The name of Ignite Extension (e.g. ignite-aws-ext)'
        required: true
      release-version:
        description: 'THe Extension release version (e.g. 1.0.0)'
        required: true
      releage-tag:
        description: 'THe Extension release tag (e.g. ignite-aws-ext-1.0.0-rc1)'
        required: true

env:
  SERVER_URL: 'https://dist.apache.org/repos/dist/dev/ignite/ignite-extensions/'

jobs:
  curl:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Inputs
        id: vars
        shell: bash
        run: |
          name=${{ github.event.inputs.extension-name }}
          ver=${{ github.event.inputs.release-version }}
          rc=${{ github.event.inputs.release-tag }}
          mod_ver=$(echo ${ver} | sed -e 's/^[[:space:]]*//')
          mod_name=$(echo ${name} | sed -e 's/^[[:space:]]*//')
          mod_dir=modules/${name#"ignite-"}
          echo "Extension Version:     $mod_ver"
          echo "Extension Module Name: $mod_name"
          echo "Extension Directory:   $mod_dir"
          echo "EXTENSION_VERSION=${mod_ver}" >> $GITHUB_ENV
          echo "EXTENSION_NAME=${mod_name}" >> $GITHUB_ENV
          echo "EXTENSION_DIR=${mod_dir}" >> $GITHUB_ENV
          echo "Extension RC tag: ${rc}"
          echo "EXTENSION_RC_TAG=${rc}" >> $GITHUB_ENV
      - name: Download Binary and Sources
        run: |
          wget --recursive --no-parent --no-directories --tries=3 --retry-on-http-error=429,503,504 --accept '.zip,.asc,.sha512' \
            --execute robots=off "${{ env.SERVER_URL }}${{ env.EXTENSION_RC_TAG }}/" -P ${{ env.EXTENSION_RC_TAG }}
          ls ${{ env.EXTENSION_RC_TAG }}
      - name: Validate Binary and Sources Hashes
        run: |
          cd ${{ env.EXTENSION_RC_TAG }}
          sha512sum -c *.sha512
      - name: Validate PGP Signature
        run: |
          apt-get -y install gpg
          wget https://dist.apache.org/repos/dist/release/ignite/KEYS
          gpg --import KEYS
          for asc in $(find . -name "*.asc" -type f); do gpg --verify $asc; done
#      - name: Download Binary and Sources
#        run: "/bin/sh -c 'wget https://github.com/earthly/earthly/releases/download/v0.6.14/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
#      - name: Build and Test
#        run: mvn package -Pcheckstyle -DskipTests -B -V
